// Border
@mixin borderDisplay($property, $size, $style, $color) {
  @if $property != border {
    border-#{$property}: $size $style $color;
  } @else {
    #{$property}: $size $style $color;
  }
}

// Border radius
@mixin border-radius($radius, $values: null) {
  @if $values != null {
    @each $value in $values {
      border-#{$value}-radius: $radius;
    }
    } @else {
      border-radius: $radius;
    }
}

// Padding & Margins
@mixin padMrg($property, $values) {
  @if $property == padding {
    padding: $values;
  } @else {
    #{$property}: $values;
  }
}

// Position
@mixin position($property, $top: null, $left: null, $right: null, $bottom: null) {
  @if $property == absolute or fixed {
    position: $property;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
  } @else {
    position: $property;
  }
}

// Display element
@mixin displayEle($property: inline-block) {
  display: $property;
}

// Transitions
@mixin transition($property, $duration, $style, $delay: null) {
  transition: $property $duration $style $delay;
}

// Box and text shadow
@mixin shadow($property, $x, $y, $blur, $expand, $color) {
  @if $property == box-shadow {
    box-shadow: $x $y $blur $expand $color;
  } @else {
    text-shadow: $x $y $blur $color;
  }
}

/* Media queries */
@mixin media($breakpoint) {
  @media screen and (max-width: $breakpoint) {
    @content;
  }
}

// Clearfix
@mixin clearFix() {
  &:before, &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

